# Thomas Cecelya
# Date Started: 20 Oct 2023
# Desc.: This script will be used to take excel format data from X-band waveguide testing of 
#       a sample of anisotropic ink and perform an FFT to isolate high frequency data from 
#       target data at the X-band midpoint of 10.65 GHz.


# Code Flow:
# - Import data into pandas dataframe
# - Plot each quantity over frequency (plot S11 and S21 on same plot)
# - Pass data for epsilon, loss tangent, S11, and S21 through numpy FFT
# - Display the results in a table (or plot the filtered data if necessary)


# Import Modules:
import pandas as pd
import numpy as py
import os 



# Function Declarations:

def read_data(filepath, numrows):
    '''read_data(): Reads raw data from .xlsx or .csv file into a Pandas dataframe. 

    Args:
    - filePath (str): File path for .csv or .xlsx raw data file
    - numRows (int): Number of rows (zero-indexed) to be skipped at beginning of file

    Returns: 
    - dataFrame (dataframe): Pandas dataframe containing raw data from .csv or .xlsx raw data file
    '''

    # Open the file if it is a .csv format:
    if filepath.count(".csv") > 0:
        dataFrame = pd.read_csv(filepath, skiprows = numrows)
    
    # Open the file if it is a .xlsx format:
    elif filepath.count(".xlsx") > 0:
        dataFrame = pd.read_excel(filepath, skiprows = numrows)
    
    # Unrecognized file format:
    else:
        print("\nUNRECOGNIZED FILE FORMAT\n")
        exit()
    
    # Return the dataframe object:
    return dataFrame



# Default Execution (DO NOT EDIT)
def main():
    # File path for directory containing desired data:
    filePath = r'C:\Users\tcece\OneDrive\Desktop\School\Senior Year 2023\Fall 2023\Honors Project\Waveguide Testing Data'

    # Number of leading rows to skip in raw data (generated by PNA Network Analyzer equipment):
    numRows = 14

    # List of desired column headers (for easier manipulation):
    # columnsToReplace = ["frequency(Hz)", "Tr 1  Data(e')", "Tr 2  Data(e''/e')", "Tr 3  S11(LogM)", "Tr 4  S21(LogM)"]
    
    # newColumnHeaders = ["Frequency (Hz)", "Epsilon", "Loss Tangent", "S11 (dB)", "S21 (dB)"]

    # Acquire list of all files at the filePath directory:
    fileList = os.listdir(filePath)

    # Iterate through each file in the directory:
    for file in fileList:

        # Concatenate file name to filePath string:
        filePath = filePath + "/" + file

        # ***** DEBUG MESSAGE ***** #
        # print(f"\nFull file path: {filePath}\n")

        # Call read data function:
        rawData = read_data(filePath, numRows)

        # Rename the column headers to match desired format:
        # rawData.rename(colHeaders, axis = 'columns', inplace = True)

        # ***** DEBUG MESSAGE ***** #
        print(f"\nRaw Dataframe for {file}:\n{rawData}\n")

        # Remove current file name from the file path before moving to next file in directory:
        filePath = filePath.replace("/" + file, '')


if __name__ == '__main__':
    main()